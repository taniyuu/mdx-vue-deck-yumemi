{"remainingRequest":"/Volumes/Transcend/Yuki/code/mdx-vue/node_modules/vue-loader/lib/index.js??vue-loader-options!/Volumes/Transcend/Yuki/code/mdx-vue/node_modules/mdx-vue-deck/src/views/Deck.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Volumes/Transcend/Yuki/code/mdx-vue/node_modules/mdx-vue-deck/src/views/Deck.vue","mtime":1579525693290},{"path":"/Volumes/Transcend/Yuki/code/mdx-vue/node_modules/cache-loader/dist/cjs.js","mtime":1579525660580},{"path":"/Volumes/Transcend/Yuki/code/mdx-vue/node_modules/babel-loader/lib/index.js","mtime":1579525717170},{"path":"/Volumes/Transcend/Yuki/code/mdx-vue/node_modules/cache-loader/dist/cjs.js","mtime":1579525660580},{"path":"/Volumes/Transcend/Yuki/code/mdx-vue/node_modules/vue-loader/lib/index.js","mtime":1579525650400}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBQcmlzbSBmcm9tICdwcmlzbWpzJwppbXBvcnQgTWR4RGVjayBmcm9tICdAZGVjaycKCmV4cG9ydCBkZWZhdWx0IHsKICBjb21wb25lbnRzOiB7CiAgICBNZHhEZWNrLAogIH0sCgogIHByb3BzOiBbJ3BhZ2UnLCAnZGVja3MnXSwKCiAgY29tcHV0ZWQ6IHsKICAgIHN0eWxlT2JqKCkgewogICAgICByZXR1cm4gewogICAgICAgIHRyYW5zZm9ybTogYHRyYW5zbGF0ZVgoLSR7KAogICAgICAgICAgKE1hdGguYWJzKHRoaXMuJHN0b3JlLnN0YXRlLmN1cnJlbnRQYWdlLXRoaXMucGFnZSkgPT09IDEKICAgICAgICAgICAgPyB0aGlzLnBhZ2UKICAgICAgICAgICAgOiB0aGlzLiRzdG9yZS5zdGF0ZS5jdXJyZW50UGFnZQogICAgICAgICAgKSAtMSApKjEwMH0lKWAsCiAgICAgIH0KICAgIH0KICB9LAoKICBtb3VudGVkKCkgewogICAgdGhpcy4kbmV4dFRpY2soKCkgPT4gewogICAgICB0aGlzLiRzdG9yZS5jb21taXQoJ3NldEN1cnJlbnRQYWdlJywgdGhpcy5wYWdlKQogICAgfSkKCiAgICBQcmlzbS5oaWdobGlnaHRBbGwoKQoKICAgIHRoaXMudHJhbnNmb3JtTWR4RG9tKCkKICB9LAoKICBtZXRob2RzOiB7CiAgICB0cmFuc2Zvcm1NZHhEb20oKSB7CiAgICAgIGxldCBkZWNrUGFnZSA9IDEKICAgICAgbGV0IG5ld0RlY2tzID0gW1tdXQoKICAgICAgQXJyYXkuZnJvbSh0aGlzLiRyZWZzLmRlY2suJGVsLmNoaWxkcmVuKS5mb3JFYWNoKGVsID0+IHsKICAgICAgICBpZiAoZWwub3V0ZXJIVE1MICE9PSAnPGhyPicpIHsKICAgICAgICAgIG5ld0RlY2tzW2RlY2tQYWdlLTFdLnB1c2goZWwpCiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIG5ld0RlY2tzW2RlY2tQYWdlXSA9IFtdCiAgICAgICAgICBkZWNrUGFnZSsrCiAgICAgICAgfQogICAgICB9KQoKICAgICAgdGhpcy4kcmVmcy5kZWNrLiRlbC5pbm5lckhUTUwgPSAnJwoKICAgICAgbmV3RGVja3MuZm9yRWFjaChkZWNrID0+IHsKICAgICAgICBjb25zdCBub2RlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2JykKICAgICAgICBjb25zdCBjbGFzc0xpc3QgPSAnbWFya2Rvd24gdy1mdWxsIGgtZnVsbCBmbGV4LXNocmluay0wJwogICAgICAgIGNsYXNzTGlzdC5zcGxpdCgnICcpLmZvckVhY2goYyA9PiBub2RlLmNsYXNzTGlzdC5hZGQoYykpCgogICAgICAgIGRlY2suZm9yRWFjaChlbCA9PiBub2RlLmFwcGVuZENoaWxkKGVsKSkKCiAgICAgICAgdGhpcy4kcmVmcy5kZWNrLiRlbC5hcHBlbmQobm9kZSkKICAgICAgfSkKICAgIH0sCiAgfQp9Cg=="},{"version":3,"sources":["Deck.vue"],"names":[],"mappings":";;;;;;;;;;;AAWA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA","file":"Deck.vue","sourceRoot":"src/views","sourcesContent":["<template>\n  <div class=\"absolute inset-0 overflow-hidden\">\n    <mdx-deck\n      ref=\"deck\"\n      class=\"flex flex-row justify-start w-full h-full transition-transform transition-normal\"\n      :style=\"styleObj\"\n    />\n  </div>\n</template>\n\n<script>\nimport Prism from 'prismjs'\nimport MdxDeck from '@deck'\n\nexport default {\n  components: {\n    MdxDeck,\n  },\n\n  props: ['page', 'decks'],\n\n  computed: {\n    styleObj() {\n      return {\n        transform: `translateX(-${(\n          (Math.abs(this.$store.state.currentPage-this.page) === 1\n            ? this.page\n            : this.$store.state.currentPage\n          ) -1 )*100}%)`,\n      }\n    }\n  },\n\n  mounted() {\n    this.$nextTick(() => {\n      this.$store.commit('setCurrentPage', this.page)\n    })\n\n    Prism.highlightAll()\n\n    this.transformMdxDom()\n  },\n\n  methods: {\n    transformMdxDom() {\n      let deckPage = 1\n      let newDecks = [[]]\n\n      Array.from(this.$refs.deck.$el.children).forEach(el => {\n        if (el.outerHTML !== '<hr>') {\n          newDecks[deckPage-1].push(el)\n        } else {\n          newDecks[deckPage] = []\n          deckPage++\n        }\n      })\n\n      this.$refs.deck.$el.innerHTML = ''\n\n      newDecks.forEach(deck => {\n        const node = document.createElement('div')\n        const classList = 'markdown w-full h-full flex-shrink-0'\n        classList.split(' ').forEach(c => node.classList.add(c))\n\n        deck.forEach(el => node.appendChild(el))\n\n        this.$refs.deck.$el.append(node)\n      })\n    },\n  }\n}\n</script>\n"]}]}